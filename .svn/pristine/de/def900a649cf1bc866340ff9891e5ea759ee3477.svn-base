package com.example.mobilesafe74.activity;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.view.View;

import com.example.mobilesafe74.R;
import com.example.mobilesafe74.service.AddressService;
import com.example.mobilesafe74.utils.ConstantValue;
import com.example.mobilesafe74.utils.ServiceUtil;
import com.example.mobilesafe74.utils.SpUtils;
import com.example.mobilesafe74.view.SettingItemView;


/**
 * Created by yueyue on 2017/1/13.
 */
public class SettingActivity extends AppCompatActivity {
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_setting);

        //初始化更新的条目
        initUpdate();

        initAddress();
    }

    private void initAddress() {
        final SettingItemView siv_address = (SettingItemView) findViewById(R.id.siv_address);
        //对服务是否开的状态做显示
        boolean isRunning = ServiceUtil.isRunning(this, "com.example.mobilesafe74.service.AddressService");
        siv_address.setCheck(isRunning);

        //点击过程中,状态(是否开启电话号码归属地)的切换过程
        siv_address.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //返回点击前的选中状态
                boolean isCheck = siv_address.isCheck();
                siv_address.setCheck(!isCheck);
                if(!isCheck){
                    //开启服务,管理吐司
                    startService(new Intent(getApplicationContext(),AddressService.class));
                }else{
                    //关闭服务,不需要显示吐司
                    stopService(new Intent(getApplicationContext(),AddressService.class));
                }
            }
        });
    }

    /**
     * 初始化更新的条目
     */
    private void initUpdate() {
        final SettingItemView siv_update = (SettingItemView) findViewById(R.id.siv_update);

        boolean open_update = SpUtils.getBoolean(this, ConstantValue.OPEN_UPDATE, false);
        siv_update.setCheck(open_update);

        siv_update.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                boolean isCheck = siv_update.isCheck();
                siv_update.setCheck(!isCheck);

                SpUtils.putBoolean(getApplicationContext(),ConstantValue.OPEN_UPDATE,!isCheck);
            }
        });

    }
}
